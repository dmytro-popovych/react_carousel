{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","moveItems","setMoveItems","lastItem","length","isDisabledNext","isDisabledPrev","carouselStyle","width","imgStyle","transform","transition","className","style","map","image","index","src","alt","onClick","prev","type","disabled","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","htmlFor","id","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62d0f4a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [moveItems, setMoveItems] = useState(0);\n\n  const lastItem = images.length - frameSize;\n  const isDisabledNext = moveItems === lastItem && !infinite;\n  const isDisabledPrev = moveItems === 0 && !infinite;\n\n  const carouselStyle = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const imgStyle = {\n    transform: `translateX(${-(moveItems * itemWidth)}px)`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  const handleMovePrev = () => {\n    if (moveItems > 0) {\n      setMoveItems((prev) => (prev - step >= 0 ? prev - step : 0));\n    } else {\n      setMoveItems(lastItem);\n    }\n  };\n\n  const handleMoveNext = () => {\n    if (moveItems < lastItem) {\n      setMoveItems((prev) => (prev + step <= lastItem\n        ? prev + step\n        : lastItem));\n    } else {\n      setMoveItems(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={carouselStyle}>\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={imgStyle}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          className=\"Carousel__button\"\n          onClick={handleMovePrev}\n          type=\"button\"\n          disabled={isDisabledPrev}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          onClick={handleMoveNext}\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={isDisabledNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n      <div className=\"form\">\n        <div className=\"form__item\">\n          <label className=\"form__label\" htmlFor=\"itemId\">\n            Item width\n          </label>\n\n          <input\n            className=\"form__input\"\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={10}\n            max={390}\n            step={10}\n            onChange={(event) => setItemWidth(+(event.target.value))}\n          />\n        </div>\n\n        <div className=\"form__item\">\n          <label className=\"form__label\" htmlFor=\"frameId\">\n            Frame size\n          </label>\n\n          <input\n            className=\"form__input\"\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => setFrameSize(+(event.target.value))}\n          />\n        </div>\n\n        <div className=\"form__item\">\n          <label className=\"form__label\" htmlFor=\"stepId\">\n            Step\n          </label>\n\n          <input\n            className=\"form__input\"\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => setStep(+(event.target.value))}\n          />\n        </div>\n\n        <div className=\"form__item\">\n          <label className=\"form__label\" htmlFor=\"animationId\">\n            Animation duration\n          </label>\n\n          <input\n            className=\"form__input\"\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            min={100}\n            max={5000}\n            step={100}\n            onChange={(event) => setAnimationDuration(+(event.target.value))}\n          />\n        </div>\n\n        <div className=\"form__item\">\n          <label className=\"form__label\" htmlFor=\"infiniteId\">\n            Infinite\n          </label>\n\n          <input\n            className=\"form__input\"\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            checked={infinite}\n            onChange={(event) => setInfinite(event.target.checked)}\n          />\n        </div>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}